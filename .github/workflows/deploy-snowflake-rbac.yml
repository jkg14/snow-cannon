name: 'deploy snowflake rbac'

on:
  push:
    paths:
      - 'snowflake/rbac/**'
  workflow_dispatch:
    inputs:
        manual_run:
          description: Manual Run
          default: 1
          required: false


jobs:
  build-container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Builds Docker image
        run: docker build . -f .docker/Dockerfile -t snowflake_terraform_image_ght4353

  deploy-snowflake-rbac:
    depends-on: build-container
    runs-on: ubuntu-latest
    environment: dev
    container: snowflake_terraform_image_ght4353
    env:
      ENV: dev
      SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_REGION: ${{ secrets.SNOWFLAKE_REGION }}
      SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWSQL_PWD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWFLAKE_ROLENAME: SYSADMIN

    steps:
    - name: checkout-code
      uses: actions/checkout@v2

    - name: configure-AWS-credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-duration-seconds: 900
        role-session-name: CI-deployment

    - name: deploy-users
      run: |
        cd snowflake/rbac/users
        terraform init
        terraform workspace new $ENV || terraform workspace select $ENV
        terraform plan
        terraform apply -input=false -auto-approve

    - name: deploy-roles
      run: |
        cd snowflake/rbac/roles
        terraform init
        terraform workspace new $ENV || terraform workspace select $ENV
        terraform plan
        terraform apply -input=false -auto-approve
